stuff to do
every package for have its own section, related packages should near each other
use ----name---- to denote a package

NOTES:
please don't count to much (but include some) time on research in the time it took to complete
research is an important use of time however it is technically not completely part of the project
recommend only recording about 20% of your research time in time taken to complete

layout
[num] - [thing to do] : [short desc] ([date completed] : [est time taken])
1 - make to do : create and fill the to-do list (5/8/19 : 15 min)

----GUI to-do----
creates and runs the gui
1 - proto gui : create a prototype gui to demo (5/9/19 : 4 hr)
2 - create refined layout : iron our issues and make it look nicer (not done)
3 - add functionality for prototype : make some buttons work (not done)
4 - add color to important buttons : add color to important buttons (not done)
5 - add labels : add labels to areas that need them (not done)
6 - add function buttons : add the col of function buttons (5/9/19 : 15min)
7 - add labels to func : add proper labels to func buttons (not done)
8 - add functionality : make the func buttons work (not done)
9 - Change Item list : make item list a stack pane so that items can layered depending on options (4/11/19 : 1.5hr)

----Main to-do----
runs the application, starts all the classes
1 - create layout diagram : make the layout diagram for Main (not done)
2 - create way to launch program without intellJ, batch file? (not done)
3 - set up

----Register Runner to-do----
Runs the register program, handles prices, totals
1 - create layout (not done)
2 - make the classes (not done)

----Food DataBase to-do----
stores all the prices and needed information about food
1 - create layout (not done)
2 - create classes (not done)

----Logger to-do----
logs everything the system does, outputs to a text file and outputs to LEDs about system status
1 - create layout (not done)
2 - create classes (not done)

----Item----
an abstract class that all items inherit from
1 - create class, make the abstract class (5/12/19 : 10min)
2 - add functions, add the functions and implement the ones that need to be implemented (5/12/19 : 10min)

----Basic Food----
extends item, add prices and the functions to go with prices
1 - create class, make the class and extend from Item (5/12/19 : 5min)
2 - add the functions (5/12/19 : 20 min)
3 - add the sides list, and functions to go with the list (not done)
4 - change price to handle sides as well (not done)

----adjustable food----
extends basic foods, this item has toppings. both normal toppings and can add toppings
1 - create class, make class (5/12/19 : 5min)
2 - add the functions, add the topping list and functions needed for the this (5/12/19 : 30min)


----Topping----
1 - create class, extend Item (5/12/19 : 5min)
2 - add functions (5/12/19 : 20 min)
3 - handle light, regular and extra (5/12/19 : 10 min)
4 - handle no topping (5/12/19 : 5 min)



